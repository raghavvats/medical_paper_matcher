{"ast":null,"code":"var _jsxFileName = \"/Users/raghavvats/devprojects/superpower_project/medical_paper_matcher/frontend/src/components/ProfileForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, TextField, MenuItem, Grid, FormControl, InputLabel, Select, Chip, Typography } from '@mui/material';\nimport axios from 'axios';\n\n// Enum values from the backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SEX_OPTIONS = [\"male\", \"female\"];\nconst RACE_OPTIONS = [\"asian\", \"black\", \"hispanic\", \"white\", \"other\"];\nconst CONTINENT_OPTIONS = [\"north_america\", \"south_america\", \"europe\", \"asia\", \"africa\", \"oceania\", \"antarctica\"];\nconst ATHLETICISM_OPTIONS = [\"sedentary\", \"light\", \"moderate\", \"very_active\", \"athlete\"];\nconst DIET_OPTIONS = [\"omnivore\", \"vegetarian\", \"vegan\", \"pescatarian\", \"keto\", \"other\"];\nconst PREEXISTING_CONDITIONS = [\"cancer\", \"cardiovascular_diseases\", \"diabetes\", \"obesity_metabolic_syndrome\", \"neurological_disorders\", \"autoimmune_conditions\", \"respiratory_diseases\", \"chronic_kidney_disease\", \"gastrointestinal_disorders\", \"mental_health_disorders\", \"substance_dependency\"];\nconst PRIOR_CONDITIONS = [\"cancer_remission\", \"cardiovascular_resolved\", \"diabetes_resolved\", \"neurological_resolved\", \"respiratory_resolved\", \"mental_health_resolved\", \"infectious_resolved\"];\nconst SURGERIES = [\"cancer_related\", \"cardiac\", \"orthopedic\", \"neurological\", \"bariatric\", \"gynecological\", \"transplantation\"];\nconst MEDICATIONS = [\"cancer_therapies\", \"cardiac_drugs\", \"antihypertensives\", \"diabetes_medication\", \"neurological_drugs\", \"psychiatric_medications\", \"pain_management\", \"nutritional_supplements\"];\nconst ProfileForm = ({\n  onProfileSubmit,\n  onMatchResults\n}) => {\n  _s();\n  const [profile, setProfile] = useState({\n    physical: {\n      age: '',\n      weight: '',\n      height: '',\n      sex: 'male'\n    },\n    demographics: {\n      race: 'white',\n      location: 'north_america'\n    },\n    medical_history: {\n      preexisting_conditions: [],\n      prior_conditions: [],\n      surgeries: [],\n      active_medications: []\n    },\n    lifestyle: {\n      athleticism: 'moderate',\n      diet: 'omnivore'\n    }\n  });\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Convert string values to numbers where needed\n      const formattedProfile = {\n        ...profile,\n        physical: {\n          ...profile.physical,\n          age: parseInt(profile.physical.age),\n          weight: parseFloat(profile.physical.weight),\n          height: parseFloat(profile.physical.height)\n        }\n      };\n      onProfileSubmit(formattedProfile);\n      const response = await axios.post('http://localhost:8000/match/', formattedProfile);\n      onMatchResults(response.data);\n    } catch (error) {\n      console.error('Error matching profile:', error);\n    }\n  };\n  const handleChange = (section, field) => event => {\n    setProfile(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value\n      }\n    }));\n  };\n  const handleMultiSelect = (section, field) => event => {\n    setProfile(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Physical Characteristics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          required: true,\n          label: \"Age\",\n          type: \"number\",\n          value: profile.physical.age,\n          onChange: handleChange('physical', 'age'),\n          inputProps: {\n            min: 0,\n            max: 120\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          required: true,\n          label: \"Weight (lbs)\",\n          type: \"number\",\n          value: profile.physical.weight,\n          onChange: handleChange('physical', 'weight'),\n          inputProps: {\n            min: 0,\n            max: 1000\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          required: true,\n          label: \"Height (inches)\",\n          type: \"number\",\n          value: profile.physical.height,\n          onChange: handleChange('physical', 'height'),\n          inputProps: {\n            min: 0,\n            max: 120\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Sex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: profile.physical.sex,\n            onChange: handleChange('physical', 'sex'),\n            label: \"Sex\",\n            children: SEX_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.charAt(0).toUpperCase() + option.slice(1)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Demographics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Race\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: profile.demographics.race,\n            onChange: handleChange('demographics', 'race'),\n            label: \"Race\",\n            children: RACE_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.charAt(0).toUpperCase() + option.slice(1)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: profile.demographics.location,\n            onChange: handleChange('demographics', 'location'),\n            label: \"Location\",\n            children: CONTINENT_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Medical History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Preexisting Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: profile.medical_history.preexisting_conditions,\n            onChange: handleMultiSelect('medical_history', 'preexisting_conditions'),\n            label: \"Preexisting Conditions\",\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value.split('_').join(' ')\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 17\n            }, this),\n            children: PREEXISTING_CONDITIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Prior Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: profile.medical_history.prior_conditions,\n            onChange: handleMultiSelect('medical_history', 'prior_conditions'),\n            label: \"Prior Conditions\",\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value.split('_').join(' ')\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this),\n            children: PRIOR_CONDITIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Surgeries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: profile.medical_history.surgeries,\n            onChange: handleMultiSelect('medical_history', 'surgeries'),\n            label: \"Surgeries\",\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value.split('_').join(' ')\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this),\n            children: SURGERIES.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Active Medications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: profile.medical_history.active_medications,\n            onChange: handleMultiSelect('medical_history', 'active_medications'),\n            label: \"Active Medications\",\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value.split('_').join(' ')\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this),\n            children: MEDICATIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Lifestyle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Athleticism\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: profile.lifestyle.athleticism,\n            onChange: handleChange('lifestyle', 'athleticism'),\n            label: \"Athleticism\",\n            children: ATHLETICISM_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Diet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: profile.lifestyle.diet,\n            onChange: handleChange('lifestyle', 'diet'),\n            label: \"Diet\",\n            children: DIET_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.charAt(0).toUpperCase() + option.slice(1)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          type: \"submit\",\n          fullWidth: true,\n          size: \"large\",\n          sx: {\n            mt: 2\n          },\n          children: \"Match Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileForm, \"TE9lTYYgfAg+37zb3Kl42lPehVI=\");\n_c = ProfileForm;\nexport default ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["React","useState","Box","Button","TextField","MenuItem","Grid","FormControl","InputLabel","Select","Chip","Typography","axios","jsxDEV","_jsxDEV","SEX_OPTIONS","RACE_OPTIONS","CONTINENT_OPTIONS","ATHLETICISM_OPTIONS","DIET_OPTIONS","PREEXISTING_CONDITIONS","PRIOR_CONDITIONS","SURGERIES","MEDICATIONS","ProfileForm","onProfileSubmit","onMatchResults","_s","profile","setProfile","physical","age","weight","height","sex","demographics","race","location","medical_history","preexisting_conditions","prior_conditions","surgeries","active_medications","lifestyle","athleticism","diet","handleSubmit","e","preventDefault","formattedProfile","parseInt","parseFloat","response","post","data","error","console","handleChange","section","field","event","prev","target","value","handleMultiSelect","component","onSubmit","children","container","spacing","item","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","sm","fullWidth","required","label","type","onChange","inputProps","min","max","map","option","charAt","toUpperCase","slice","split","word","join","multiple","renderValue","selected","sx","display","flexWrap","gap","color","size","mt","_c","$RefreshReg$"],"sources":["/Users/raghavvats/devprojects/superpower_project/medical_paper_matcher/frontend/src/components/ProfileForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, TextField, MenuItem, Grid, FormControl, InputLabel, Select, Chip, Typography } from '@mui/material';\nimport axios from 'axios';\n\n// Enum values from the backend\nconst SEX_OPTIONS = [\"male\", \"female\"];\nconst RACE_OPTIONS = [\"asian\", \"black\", \"hispanic\", \"white\", \"other\"];\nconst CONTINENT_OPTIONS = [\"north_america\", \"south_america\", \"europe\", \"asia\", \"africa\", \"oceania\", \"antarctica\"];\nconst ATHLETICISM_OPTIONS = [\"sedentary\", \"light\", \"moderate\", \"very_active\", \"athlete\"];\nconst DIET_OPTIONS = [\"omnivore\", \"vegetarian\", \"vegan\", \"pescatarian\", \"keto\", \"other\"];\nconst PREEXISTING_CONDITIONS = [\n  \"cancer\", \"cardiovascular_diseases\", \"diabetes\", \"obesity_metabolic_syndrome\",\n  \"neurological_disorders\", \"autoimmune_conditions\", \"respiratory_diseases\",\n  \"chronic_kidney_disease\", \"gastrointestinal_disorders\", \"mental_health_disorders\",\n  \"substance_dependency\"\n];\nconst PRIOR_CONDITIONS = [\n  \"cancer_remission\", \"cardiovascular_resolved\", \"diabetes_resolved\",\n  \"neurological_resolved\", \"respiratory_resolved\", \"mental_health_resolved\",\n  \"infectious_resolved\"\n];\nconst SURGERIES = [\n  \"cancer_related\", \"cardiac\", \"orthopedic\", \"neurological\",\n  \"bariatric\", \"gynecological\", \"transplantation\"\n];\nconst MEDICATIONS = [\n  \"cancer_therapies\", \"cardiac_drugs\", \"antihypertensives\", \"diabetes_medication\",\n  \"neurological_drugs\", \"psychiatric_medications\", \"pain_management\",\n  \"nutritional_supplements\"\n];\n\nconst ProfileForm = ({ onProfileSubmit, onMatchResults }) => {\n  const [profile, setProfile] = useState({\n    physical: {\n      age: '',\n      weight: '',\n      height: '',\n      sex: 'male'\n    },\n    demographics: {\n      race: 'white',\n      location: 'north_america'\n    },\n    medical_history: {\n      preexisting_conditions: [],\n      prior_conditions: [],\n      surgeries: [],\n      active_medications: []\n    },\n    lifestyle: {\n      athleticism: 'moderate',\n      diet: 'omnivore'\n    }\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Convert string values to numbers where needed\n      const formattedProfile = {\n        ...profile,\n        physical: {\n          ...profile.physical,\n          age: parseInt(profile.physical.age),\n          weight: parseFloat(profile.physical.weight),\n          height: parseFloat(profile.physical.height)\n        }\n      };\n      \n      onProfileSubmit(formattedProfile);\n      const response = await axios.post('http://localhost:8000/match/', formattedProfile);\n      onMatchResults(response.data);\n    } catch (error) {\n      console.error('Error matching profile:', error);\n    }\n  };\n\n  const handleChange = (section, field) => (event) => {\n    setProfile(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value\n      }\n    }));\n  };\n\n  const handleMultiSelect = (section, field) => (event) => {\n    setProfile(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value\n      }\n    }));\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit}>\n      <Grid container spacing={2}>\n        {/* Physical Characteristics */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Physical Characteristics</Typography>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            required\n            label=\"Age\"\n            type=\"number\"\n            value={profile.physical.age}\n            onChange={handleChange('physical', 'age')}\n            inputProps={{ min: 0, max: 120 }}\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            required\n            label=\"Weight (lbs)\"\n            type=\"number\"\n            value={profile.physical.weight}\n            onChange={handleChange('physical', 'weight')}\n            inputProps={{ min: 0, max: 1000 }}\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            required\n            label=\"Height (inches)\"\n            type=\"number\"\n            value={profile.physical.height}\n            onChange={handleChange('physical', 'height')}\n            inputProps={{ min: 0, max: 120 }}\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Sex</InputLabel>\n            <Select\n              value={profile.physical.sex}\n              onChange={handleChange('physical', 'sex')}\n              label=\"Sex\"\n            >\n              {SEX_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.charAt(0).toUpperCase() + option.slice(1)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* Demographics */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Demographics</Typography>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Race</InputLabel>\n            <Select\n              value={profile.demographics.race}\n              onChange={handleChange('demographics', 'race')}\n              label=\"Race\"\n            >\n              {RACE_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.charAt(0).toUpperCase() + option.slice(1)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Location</InputLabel>\n            <Select\n              value={profile.demographics.location}\n              onChange={handleChange('demographics', 'location')}\n              label=\"Location\"\n            >\n              {CONTINENT_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* Medical History */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Medical History</Typography>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Preexisting Conditions</InputLabel>\n            <Select\n              multiple\n              value={profile.medical_history.preexisting_conditions}\n              onChange={handleMultiSelect('medical_history', 'preexisting_conditions')}\n              label=\"Preexisting Conditions\"\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value.split('_').join(' ')} />\n                  ))}\n                </Box>\n              )}\n            >\n              {PREEXISTING_CONDITIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Prior Conditions</InputLabel>\n            <Select\n              multiple\n              value={profile.medical_history.prior_conditions}\n              onChange={handleMultiSelect('medical_history', 'prior_conditions')}\n              label=\"Prior Conditions\"\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value.split('_').join(' ')} />\n                  ))}\n                </Box>\n              )}\n            >\n              {PRIOR_CONDITIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Surgeries</InputLabel>\n            <Select\n              multiple\n              value={profile.medical_history.surgeries}\n              onChange={handleMultiSelect('medical_history', 'surgeries')}\n              label=\"Surgeries\"\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value.split('_').join(' ')} />\n                  ))}\n                </Box>\n              )}\n            >\n              {SURGERIES.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Active Medications</InputLabel>\n            <Select\n              multiple\n              value={profile.medical_history.active_medications}\n              onChange={handleMultiSelect('medical_history', 'active_medications')}\n              label=\"Active Medications\"\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value.split('_').join(' ')} />\n                  ))}\n                </Box>\n              )}\n            >\n              {MEDICATIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* Lifestyle */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Lifestyle</Typography>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Athleticism</InputLabel>\n            <Select\n              value={profile.lifestyle.athleticism}\n              onChange={handleChange('lifestyle', 'athleticism')}\n              label=\"Athleticism\"\n            >\n              {ATHLETICISM_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Diet</InputLabel>\n            <Select\n              value={profile.lifestyle.diet}\n              onChange={handleChange('lifestyle', 'diet')}\n              label=\"Diet\"\n            >\n              {DIET_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.charAt(0).toUpperCase() + option.slice(1)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Button \n            variant=\"contained\" \n            color=\"primary\" \n            type=\"submit\"\n            fullWidth\n            size=\"large\"\n            sx={{ mt: 2 }}\n          >\n            Match Profile\n          </Button>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default ProfileForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
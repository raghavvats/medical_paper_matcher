{"ast":null,"code":"var _jsxFileName = \"/Users/raghavvats/devprojects/superpower_project/medical_paper_matcher/frontend/src/components/ProfileForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, TextField, MenuItem, Grid, FormControl, InputLabel, Select, Chip, Typography, Divider, Checkbox, FormControlLabel, Alert } from '@mui/material';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Enum values from the backend\nconst SEX_OPTIONS = [\"male\", \"female\"];\nconst RACE_OPTIONS = [\"asian\", \"black\", \"hispanic\", \"white\", \"other\"];\nconst CONTINENT_OPTIONS = [\"north_america\", \"south_america\", \"europe\", \"asia\", \"africa\", \"oceania\", \"antarctica\"];\nconst ATHLETICISM_OPTIONS = [\"sedentary\", \"light\", \"moderate\", \"very_active\", \"athlete\"];\nconst DIET_OPTIONS = [\"omnivore\", \"vegetarian\", \"vegan\", \"pescatarian\", \"keto\", \"other\"];\nconst PREEXISTING_CONDITIONS = [\"cancer\", \"cardiovascular_diseases\", \"diabetes\", \"obesity_metabolic_syndrome\", \"neurological_disorders\", \"autoimmune_conditions\", \"respiratory_diseases\", \"chronic_kidney_disease\", \"gastrointestinal_disorders\", \"mental_health_disorders\", \"substance_dependency\"];\nconst PRIOR_CONDITIONS = [\"cancer_remission\", \"cardiovascular_resolved\", \"diabetes_resolved\", \"neurological_resolved\", \"respiratory_resolved\", \"mental_health_resolved\", \"infectious_resolved\"];\nconst SURGERIES = [\"cancer_related\", \"cardiac\", \"orthopedic\", \"neurological\", \"bariatric\", \"gynecological\", \"transplantation\"];\nconst MEDICATIONS = [\"cancer_therapies\", \"cardiac_drugs\", \"antihypertensives\", \"diabetes_medication\", \"neurological_drugs\", \"psychiatric_medications\", \"pain_management\", \"nutritional_supplements\"];\nconst ProfileForm = ({\n  onProfileSubmit,\n  onMatchResults\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    physical: {\n      age: '',\n      weight: '',\n      height: '',\n      sex: 'male'\n    },\n    demographics: {\n      race: 'white',\n      location: 'north_america'\n    },\n    medical_history: {\n      preexisting_conditions: [],\n      prior_conditions: [],\n      surgeries: [],\n      active_medications: []\n    },\n    lifestyle: {\n      athleticism: 'moderate',\n      diet: 'omnivore'\n    }\n  });\n  const [username, setUsername] = useState('');\n  const [saveProfile, setSaveProfile] = useState(false);\n  const [saveUsername, setSaveUsername] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n  const handleLoadProfile = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/profiles/${username}`);\n      if (!response.ok) {\n        throw new Error('Profile not found');\n      }\n      const data = await response.json();\n      setFormData(data.profile);\n      setMessage('Profile loaded successfully');\n      setError('');\n    } catch (err) {\n      setError('Failed to load profile: ' + err.message);\n      setMessage('');\n    }\n  };\n  const handleSaveProfile = async () => {\n    if (!saveUsername) {\n      setError('Please enter a username to save the profile');\n      return;\n    }\n    try {\n      const response = await fetch(`${API_BASE_URL}/profiles/save`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: saveUsername,\n          profile: formData\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to save profile');\n      }\n      setMessage('Profile loaded successfully');\n      setError('');\n      setSaveProfile(false);\n      setSaveUsername('');\n    } catch (err) {\n      setError('Failed to save profile: ' + err.message);\n      setMessage('');\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Convert string values to numbers where needed\n      const formattedProfile = {\n        ...formData,\n        physical: {\n          ...formData.physical,\n          age: parseInt(formData.physical.age),\n          weight: parseFloat(formData.physical.weight),\n          height: parseFloat(formData.physical.height)\n        }\n      };\n      onProfileSubmit(formattedProfile);\n      const response = await axios.post(`${API_BASE_URL}/match/`, formattedProfile);\n      onMatchResults(response.data);\n    } catch (error) {\n      console.error('Error matching profile:', error);\n    }\n  };\n  const handleChange = (section, field) => event => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value\n      }\n    }));\n  };\n  const handleMultiSelect = (section, field) => event => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            flexDirection: 'column',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              gap: 2\n            },\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Enter Username\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              size: \"small\",\n              sx: {\n                flex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: handleLoadProfile,\n              disabled: !username,\n              children: \"Load Profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), error && error.includes('not found') && /*#__PURE__*/_jsxDEV(Alert, {\n            severity: \"error\",\n            sx: {\n              mt: 1\n            },\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          alignItems: 'center',\n          my: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            flex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            mx: 2\n          },\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          sx: {\n            flex: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Physical Characteristics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          required: true,\n          label: \"Age\",\n          type: \"number\",\n          value: formData.physical.age,\n          onChange: handleChange('physical', 'age'),\n          inputProps: {\n            min: 0,\n            max: 120\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          required: true,\n          label: \"Weight (lbs)\",\n          type: \"number\",\n          value: formData.physical.weight,\n          onChange: handleChange('physical', 'weight'),\n          inputProps: {\n            min: 0,\n            max: 1000\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          required: true,\n          label: \"Height (inches)\",\n          type: \"number\",\n          value: formData.physical.height,\n          onChange: handleChange('physical', 'height'),\n          inputProps: {\n            min: 0,\n            max: 120\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Sex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: formData.physical.sex,\n            onChange: handleChange('physical', 'sex'),\n            label: \"Sex\",\n            children: SEX_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.charAt(0).toUpperCase() + option.slice(1)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Demographics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Race\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: formData.demographics.race,\n            onChange: handleChange('demographics', 'race'),\n            label: \"Race\",\n            children: RACE_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.charAt(0).toUpperCase() + option.slice(1)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: formData.demographics.location,\n            onChange: handleChange('demographics', 'location'),\n            label: \"Location\",\n            children: CONTINENT_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Medical History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Preexisting Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: formData.medical_history.preexisting_conditions,\n            onChange: handleMultiSelect('medical_history', 'preexisting_conditions'),\n            label: \"Preexisting Conditions\",\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value.split('_').join(' ')\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this),\n            children: PREEXISTING_CONDITIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Prior Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: formData.medical_history.prior_conditions,\n            onChange: handleMultiSelect('medical_history', 'prior_conditions'),\n            label: \"Prior Conditions\",\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value.split('_').join(' ')\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this),\n            children: PRIOR_CONDITIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Surgeries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: formData.medical_history.surgeries,\n            onChange: handleMultiSelect('medical_history', 'surgeries'),\n            label: \"Surgeries\",\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value.split('_').join(' ')\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this),\n            children: SURGERIES.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Active Medications\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            multiple: true,\n            value: formData.medical_history.active_medications,\n            onChange: handleMultiSelect('medical_history', 'active_medications'),\n            label: \"Active Medications\",\n            renderValue: selected => /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                flexWrap: 'wrap',\n                gap: 0.5\n              },\n              children: selected.map(value => /*#__PURE__*/_jsxDEV(Chip, {\n                label: value.split('_').join(' ')\n              }, value, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 17\n            }, this),\n            children: MEDICATIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Lifestyle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Athleticism\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: formData.lifestyle.athleticism,\n            onChange: handleChange('lifestyle', 'athleticism'),\n            label: \"Athleticism\",\n            children: ATHLETICISM_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.split('_').join(' ')\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            children: \"Diet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: formData.lifestyle.diet,\n            onChange: handleChange('lifestyle', 'diet'),\n            label: \"Diet\",\n            children: DIET_OPTIONS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: option,\n              children: option.charAt(0).toUpperCase() + option.slice(1)\n            }, option, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: saveProfile,\n          onChange: e => setSaveProfile(e.target.checked)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 13\n        }, this),\n        label: \"Save this profile\",\n        sx: {\n          ml: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), saveProfile && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mt: 1,\n          mb: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Choose Username\",\n          value: saveUsername,\n          onChange: e => setSaveUsername(e.target.value),\n          size: \"small\",\n          sx: {\n            width: '300px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSubmit,\n        sx: {\n          flex: 1\n        },\n        children: \"Match Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this), saveProfile && saveUsername && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSaveProfile,\n        children: \"Save Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), error && !error.includes('not found') && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      sx: {\n        mt: 2\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 9\n    }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      sx: {\n        mt: 2\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfileForm, \"1VJ/KVKoHFxjPadMH+7O75z7iX8=\");\n_c = ProfileForm;\nexport default ProfileForm;\nvar _c;\n$RefreshReg$(_c, \"ProfileForm\");","map":{"version":3,"names":["React","useState","Box","Button","TextField","MenuItem","Grid","FormControl","InputLabel","Select","Chip","Typography","Divider","Checkbox","FormControlLabel","Alert","axios","jsxDEV","_jsxDEV","API_BASE_URL","SEX_OPTIONS","RACE_OPTIONS","CONTINENT_OPTIONS","ATHLETICISM_OPTIONS","DIET_OPTIONS","PREEXISTING_CONDITIONS","PRIOR_CONDITIONS","SURGERIES","MEDICATIONS","ProfileForm","onProfileSubmit","onMatchResults","_s","formData","setFormData","physical","age","weight","height","sex","demographics","race","location","medical_history","preexisting_conditions","prior_conditions","surgeries","active_medications","lifestyle","athleticism","diet","username","setUsername","saveProfile","setSaveProfile","saveUsername","setSaveUsername","error","setError","message","setMessage","handleLoadProfile","response","fetch","ok","Error","data","json","profile","err","handleSaveProfile","method","headers","body","JSON","stringify","handleSubmit","e","preventDefault","formattedProfile","parseInt","parseFloat","post","console","handleChange","section","field","event","prev","target","value","handleMultiSelect","children","sx","mb","display","alignItems","flexDirection","flex","gap","label","onChange","size","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","disabled","includes","severity","mt","my","mx","container","spacing","item","xs","sm","fullWidth","required","type","inputProps","min","max","map","option","charAt","toUpperCase","slice","split","word","join","multiple","renderValue","selected","flexWrap","control","checked","ml","width","color","_c","$RefreshReg$"],"sources":["/Users/raghavvats/devprojects/superpower_project/medical_paper_matcher/frontend/src/components/ProfileForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Box, Button, TextField, MenuItem, Grid, FormControl, InputLabel, Select, Chip, Typography, Divider, Checkbox, FormControlLabel, Alert } from '@mui/material';\nimport axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8000';\n\n// Enum values from the backend\nconst SEX_OPTIONS = [\"male\", \"female\"];\nconst RACE_OPTIONS = [\"asian\", \"black\", \"hispanic\", \"white\", \"other\"];\nconst CONTINENT_OPTIONS = [\"north_america\", \"south_america\", \"europe\", \"asia\", \"africa\", \"oceania\", \"antarctica\"];\nconst ATHLETICISM_OPTIONS = [\"sedentary\", \"light\", \"moderate\", \"very_active\", \"athlete\"];\nconst DIET_OPTIONS = [\"omnivore\", \"vegetarian\", \"vegan\", \"pescatarian\", \"keto\", \"other\"];\nconst PREEXISTING_CONDITIONS = [\n  \"cancer\", \"cardiovascular_diseases\", \"diabetes\", \"obesity_metabolic_syndrome\",\n  \"neurological_disorders\", \"autoimmune_conditions\", \"respiratory_diseases\",\n  \"chronic_kidney_disease\", \"gastrointestinal_disorders\", \"mental_health_disorders\",\n  \"substance_dependency\"\n];\nconst PRIOR_CONDITIONS = [\n  \"cancer_remission\", \"cardiovascular_resolved\", \"diabetes_resolved\",\n  \"neurological_resolved\", \"respiratory_resolved\", \"mental_health_resolved\",\n  \"infectious_resolved\"\n];\nconst SURGERIES = [\n  \"cancer_related\", \"cardiac\", \"orthopedic\", \"neurological\",\n  \"bariatric\", \"gynecological\", \"transplantation\"\n];\nconst MEDICATIONS = [\n  \"cancer_therapies\", \"cardiac_drugs\", \"antihypertensives\", \"diabetes_medication\",\n  \"neurological_drugs\", \"psychiatric_medications\", \"pain_management\",\n  \"nutritional_supplements\"\n];\n\nconst ProfileForm = ({ onProfileSubmit, onMatchResults }) => {\n  const [formData, setFormData] = useState({\n    physical: {\n      age: '',\n      weight: '',\n      height: '',\n      sex: 'male'\n    },\n    demographics: {\n      race: 'white',\n      location: 'north_america'\n    },\n    medical_history: {\n      preexisting_conditions: [],\n      prior_conditions: [],\n      surgeries: [],\n      active_medications: []\n    },\n    lifestyle: {\n      athleticism: 'moderate',\n      diet: 'omnivore'\n    }\n  });\n  const [username, setUsername] = useState('');\n  const [saveProfile, setSaveProfile] = useState(false);\n  const [saveUsername, setSaveUsername] = useState('');\n  const [error, setError] = useState('');\n  const [message, setMessage] = useState('');\n\n  const handleLoadProfile = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/profiles/${username}`);\n      if (!response.ok) {\n        throw new Error('Profile not found');\n      }\n      const data = await response.json();\n      setFormData(data.profile);\n      setMessage('Profile loaded successfully');\n      setError('');\n    } catch (err) {\n      setError('Failed to load profile: ' + err.message);\n      setMessage('');\n    }\n  };\n\n  const handleSaveProfile = async () => {\n    if (!saveUsername) {\n      setError('Please enter a username to save the profile');\n      return;\n    }\n\n    try {\n      const response = await fetch(`${API_BASE_URL}/profiles/save`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          username: saveUsername,\n          profile: formData\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to save profile');\n      }\n\n      setMessage('Profile loaded successfully');\n      setError('');\n      setSaveProfile(false);\n      setSaveUsername('');\n    } catch (err) {\n      setError('Failed to save profile: ' + err.message);\n      setMessage('');\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      // Convert string values to numbers where needed\n      const formattedProfile = {\n        ...formData,\n        physical: {\n          ...formData.physical,\n          age: parseInt(formData.physical.age),\n          weight: parseFloat(formData.physical.weight),\n          height: parseFloat(formData.physical.height)\n        }\n      };\n      \n      onProfileSubmit(formattedProfile);\n      const response = await axios.post(`${API_BASE_URL}/match/`, formattedProfile);\n      onMatchResults(response.data);\n    } catch (error) {\n      console.error('Error matching profile:', error);\n    }\n  };\n\n  const handleChange = (section, field) => (event) => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value\n      }\n    }));\n  };\n\n  const handleMultiSelect = (section, field) => (event) => {\n    setFormData(prev => ({\n      ...prev,\n      [section]: {\n        ...prev[section],\n        [field]: event.target.value\n      }\n    }));\n  };\n\n  return (\n    <Box>\n      {/* Load Profile Section */}\n      <Box sx={{ mb: 3 }}>\n        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n          <Box sx={{ display: 'flex', flexDirection: 'column', flex: 1 }}>\n            <Box sx={{ display: 'flex', gap: 2 }}>\n              <TextField\n                label=\"Enter Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                size=\"small\"\n                sx={{ flex: 1 }}\n              />\n              <Button \n                variant=\"contained\" \n                onClick={handleLoadProfile}\n                disabled={!username}\n              >\n                Load Profile\n              </Button>\n            </Box>\n            {/* Error message for load profile */}\n            {error && error.includes('not found') && (\n              <Alert severity=\"error\" sx={{ mt: 1 }}>\n                {error}\n              </Alert>\n            )}\n          </Box>\n        </Box>\n\n        <Box sx={{ display: 'flex', alignItems: 'center', my: 2 }}>\n          <Divider sx={{ flex: 1 }} />\n          <Typography sx={{ mx: 2 }}>OR</Typography>\n          <Divider sx={{ flex: 1 }} />\n        </Box>\n      </Box>\n\n      <Grid container spacing={2}>\n        {/* Physical Characteristics */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Physical Characteristics</Typography>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            required\n            label=\"Age\"\n            type=\"number\"\n            value={formData.physical.age}\n            onChange={handleChange('physical', 'age')}\n            inputProps={{ min: 0, max: 120 }}\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            required\n            label=\"Weight (lbs)\"\n            type=\"number\"\n            value={formData.physical.weight}\n            onChange={handleChange('physical', 'weight')}\n            inputProps={{ min: 0, max: 1000 }}\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <TextField\n            fullWidth\n            required\n            label=\"Height (inches)\"\n            type=\"number\"\n            value={formData.physical.height}\n            onChange={handleChange('physical', 'height')}\n            inputProps={{ min: 0, max: 120 }}\n          />\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Sex</InputLabel>\n            <Select\n              value={formData.physical.sex}\n              onChange={handleChange('physical', 'sex')}\n              label=\"Sex\"\n            >\n              {SEX_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.charAt(0).toUpperCase() + option.slice(1)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* Demographics */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Demographics</Typography>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Race</InputLabel>\n            <Select\n              value={formData.demographics.race}\n              onChange={handleChange('demographics', 'race')}\n              label=\"Race\"\n            >\n              {RACE_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.charAt(0).toUpperCase() + option.slice(1)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Location</InputLabel>\n            <Select\n              value={formData.demographics.location}\n              onChange={handleChange('demographics', 'location')}\n              label=\"Location\"\n            >\n              {CONTINENT_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1)).join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* Medical History */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Medical History</Typography>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Preexisting Conditions</InputLabel>\n            <Select\n              multiple\n              value={formData.medical_history.preexisting_conditions}\n              onChange={handleMultiSelect('medical_history', 'preexisting_conditions')}\n              label=\"Preexisting Conditions\"\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value.split('_').join(' ')} />\n                  ))}\n                </Box>\n              )}\n            >\n              {PREEXISTING_CONDITIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Prior Conditions</InputLabel>\n            <Select\n              multiple\n              value={formData.medical_history.prior_conditions}\n              onChange={handleMultiSelect('medical_history', 'prior_conditions')}\n              label=\"Prior Conditions\"\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value.split('_').join(' ')} />\n                  ))}\n                </Box>\n              )}\n            >\n              {PRIOR_CONDITIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Surgeries</InputLabel>\n            <Select\n              multiple\n              value={formData.medical_history.surgeries}\n              onChange={handleMultiSelect('medical_history', 'surgeries')}\n              label=\"Surgeries\"\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value.split('_').join(' ')} />\n                  ))}\n                </Box>\n              )}\n            >\n              {SURGERIES.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12}>\n          <FormControl fullWidth>\n            <InputLabel>Active Medications</InputLabel>\n            <Select\n              multiple\n              value={formData.medical_history.active_medications}\n              onChange={handleMultiSelect('medical_history', 'active_medications')}\n              label=\"Active Medications\"\n              renderValue={(selected) => (\n                <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                  {selected.map((value) => (\n                    <Chip key={value} label={value.split('_').join(' ')} />\n                  ))}\n                </Box>\n              )}\n            >\n              {MEDICATIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n\n        {/* Lifestyle */}\n        <Grid item xs={12}>\n          <Typography variant=\"h6\">Lifestyle</Typography>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Athleticism</InputLabel>\n            <Select\n              value={formData.lifestyle.athleticism}\n              onChange={handleChange('lifestyle', 'athleticism')}\n              label=\"Athleticism\"\n            >\n              {ATHLETICISM_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.split('_').join(' ')}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n        \n        <Grid item xs={12} sm={6}>\n          <FormControl fullWidth required>\n            <InputLabel>Diet</InputLabel>\n            <Select\n              value={formData.lifestyle.diet}\n              onChange={handleChange('lifestyle', 'diet')}\n              label=\"Diet\"\n            >\n              {DIET_OPTIONS.map(option => (\n                <MenuItem key={option} value={option}>\n                  {option.charAt(0).toUpperCase() + option.slice(1)}\n                </MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n\n      {/* Save Profile and Submit Section */}\n      <Box sx={{ mt: 4, mb: 2 }}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={saveProfile}\n              onChange={(e) => setSaveProfile(e.target.checked)}\n            />\n          }\n          label=\"Save this profile\"\n          sx={{ ml: 0 }}\n        />\n        \n        {saveProfile && (\n          <Box sx={{ mt: 1, mb: 2 }}>\n            <TextField\n              label=\"Choose Username\"\n              value={saveUsername}\n              onChange={(e) => setSaveUsername(e.target.value)}\n              size=\"small\"\n              sx={{ width: '300px' }}\n            />\n          </Box>\n        )}\n      </Box>\n\n      {/* Buttons Section */}\n      <Box sx={{ display: 'flex', gap: 2 }}>\n        <Button \n          variant=\"contained\" \n          color=\"primary\" \n          onClick={handleSubmit}\n          sx={{ flex: 1 }}\n        >\n          Match Profile\n        </Button>\n        {saveProfile && saveUsername && (\n          <Button \n            variant=\"contained\"\n            onClick={handleSaveProfile}\n          >\n            Save Profile\n          </Button>\n        )}\n      </Box>\n\n      {/* Other error/success messages */}\n      {error && !error.includes('not found') && (\n        <Alert severity=\"error\" sx={{ mt: 2 }}>{error}</Alert>\n      )}\n      {message && (\n        <Alert severity=\"success\" sx={{ mt: 2 }}>{message}</Alert>\n      )}\n    </Box>\n  );\n};\n\nexport default ProfileForm; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}